plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

group = 'org.inadvance'
version = '1.0'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    runtimeOnly 'com.h2database:h2'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

bootJar {
    archiveFileName = 'inadvance-evaluation-1.0-plain.jar'
    mainClassName = 'org.inadvance.Application'
}

springBoot {
    mainClassName = 'org.inadvance.Application'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = file("${buildDir}/jacocoHtml")
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'org/inadvance/model/**',
                    'org/inadvance/dto/**',
                    'org/inadvance/repository/**',
                    'org/inadvance/service/UserService.class',
                    'org/inadvance/service/mapper/**',
                    'org/inadvance/util/**',
                    'org/inadvance/securityConfig/**',
                    'org/inadvance/exception/**',
                    'org/inadvance/Application.class',

            ])
        }))
    }
}